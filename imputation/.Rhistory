library(here)
source(here("R", "utils.R"))
source(here("imputation", "custom_mice_functions.R"))
source(here("imputation", "imputation_helpers.R"))
df <- read_rds(here("data", "analysis_data_10_01_25.rds"))
library(tidyverse)
df <- read_rds(here("data", "analysis_data_10_01_25.rds"))
### Run multiple imputation ###
library(foreach)
library(doParallel)
library(tidyverse)
library(mice)
library(here)
library(glmnet)
source(here("R", "utils.R"))
source(here("imputation", "custom_mice_functions.R"))
run_imputation <- function(data, cores) {
## Read data
df <- read_rds(here("data", data))
## Single imputation for variables with rare (<10) missing values
df <- single_imputation(df)
## standardise before imputation
df <- standardise(df)
## impute for each bootstrap sample
nrows <- length(df$Safehaven)
start <- 1
finish <- 200
cluster <- parallel::makeCluster(cores, type = "PSOCK")
registerDoParallel(cl = cluster)
foreach(i = start:finish) %dopar% {
source(here("imputation", "imputation_functions.R"))
nrows <- length(df$Safehaven)
set.seed(i)
samples <- sample(1:nrows, nrows, replace = TRUE)
df_sample <- df[samples, ]
imputation(
df_sample,
imp_name = paste0("imp", i, ".rds"),
complete_name = paste0("complete", i, ".rds")
)
}
}
run_imputation("analysis_data_10_01_25.rds", 1)
source(here("imputation", "imputation_functions.R"))
here()
source(here("imputation", "imputation_helpers.R"))
run_imputation <- function(data, cores) {
## Read data
df <- read_rds(here("data", data))
## Single imputation for variables with rare (<10) missing values
df <- single_imputation(df)
## standardise before imputation
df <- standardise(df)
## impute for each bootstrap sample
nrows <- length(df$Safehaven)
start <- 1
finish <- 200
cluster <- parallel::makeCluster(cores, type = "PSOCK")
registerDoParallel(cl = cluster)
foreach(i = start:finish) %dopar% {
source(here("imputation", "imputation_helpers.R"))
nrows <- length(df$Safehaven)
set.seed(i)
samples <- sample(1:nrows, nrows, replace = TRUE)
df_sample <- df[samples, ]
imputation(
df_sample,
imp_name = paste0("imp", i, ".rds"),
complete_name = paste0("complete", i, ".rds")
)
}
}
run_imputation("analysis_data_10_01_25.rds", 1)
run_imputation <- function(data, cores) {
## Read data
df <- read_rds(here("data", data))
## Single imputation for variables with rare (<10) missing values
df <- single_imputation(df)
## standardise before imputation
df <- standardise(df)
## impute for each bootstrap sample
nrows <- length(df$Safehaven)
start <- 1
finish <- 200
cluster <- parallel::makeCluster(cores, type = "PSOCK")
registerDoParallel(cl = cluster)
foreach(i = start:finish) %dopar% {
source(here("imputation", "imputation_helpers.R"))
library(here)
nrows <- length(df$Safehaven)
set.seed(i)
samples <- sample(1:nrows, nrows, replace = TRUE)
df_sample <- df[samples, ]
imputation(
df_sample,
imp_name = paste0("imp", i, ".rds"),
complete_name = paste0("complete", i, ".rds")
)
}
}
run_imputation("analysis_data_10_01_25.rds", 1)
?parallel::makeCluster
### Run multiple imputation ###
library(foreach)
library(doParallel)
library(tidyverse)
library(mice)
library(here)
library(glmnet)
source(here("R", "utils.R"))
source(here("imputation", "custom_mice_functions.R"))
source(here("imputation", "imputation_helpers.R"))
run_imputation <- function(data, cores) {
## Read data
df <- read_rds(here("data", data))
## Single imputation for variables with rare (<10) missing values
df <- single_imputation(df)
## standardise before imputation
df <- standardise(df)
## impute for each bootstrap sample
nrows <- length(df$Safehaven)
start <- 1
finish <- 200
cluster <- parallel::makeCluster(cores, type = "PSOCK")
registerDoParallel(cl = cluster)
foreach(i = start:finish) %dopar% {
source(here("imputation", "imputation_helpers.R"))
library(here)
nrows <- length(df$Safehaven)
set.seed(i)
samples <- sample(1:nrows, nrows, replace = TRUE)
df_sample <- df[samples, ]
imputation(
df_sample,
imp_name = paste0("imp", i, ".rds"),
complete_name = paste0("complete", i, ".rds")
)
}
}
run_imputation("analysis_data_10_01_25.rds", 1)
?parallel::registerDoParallel
?registerDoParallel
?foreeach
?foreach
### Run multiple imputation ###
library(foreach)
library(doParallel)
library(tidyverse)
library(mice)
library(here)
library(glmnet)
source(here("R", "utils.R"))
source(here("imputation", "custom_mice_functions.R"))
source(here("imputation", "imputation_helpers.R"))
run_imputation <- function(data, cores) {
## Read data
df <- read_rds(here("data", data))
## Single imputation for variables with rare (<10) missing values
df <- single_imputation(df)
## standardise before imputation
df <- standardise(df)
## impute for each bootstrap sample
nrows <- length(df$Safehaven)
start <- 1
finish <- 200
cluster <- parallel::makeCluster(cores, type = "PSOCK")
registerDoParallel(cl = cluster)
foreach(i = start:finish, .packages = "here") %dopar% {
source(here("imputation", "imputation_helpers.R"))
nrows <- length(df$Safehaven)
set.seed(i)
samples <- sample(1:nrows, nrows, replace = TRUE)
df_sample <- df[samples, ]
imputation(
df_sample,
imp_name = paste0("imp", i, ".rds"),
complete_name = paste0("complete", i, ".rds")
)
}
}
run_imputation <- function(data = "analysis_data_10_01_25.rds", cores = 1) {
## Read data
df <- read_rds(here("data", data))
## Single imputation for variables with rare (<10) missing values
df <- single_imputation(df)
## standardise before imputation
df <- standardise(df)
## impute for each bootstrap sample
nrows <- length(df$Safehaven)
start <- 1
finish <- 200
cluster <- parallel::makeCluster(cores, type = "PSOCK")
registerDoParallel(cl = cluster)
foreach(i = start:finish, .packages = "here") %dopar% {
source(here("imputation", "imputation_helpers.R"))
nrows <- length(df$Safehaven)
set.seed(i)
samples <- sample(1:nrows, nrows, replace = TRUE)
df_sample <- df[samples, ]
imputation(
df_sample,
imp_name = paste0("imp", i, ".rds"),
complete_name = paste0("complete", i, ".rds")
)
}
}
run_imputation()
run_imputation <- function(data = "analysis_data_10_01_25.rds",
cores = 1,
output_suffix = "complete") {
## Read data
df <- read_rds(here("data", data))
## Single imputation for variables with rare (<10) missing values
df <- single_imputation(df)
## standardise before imputation
df <- standardise(df)
## impute for each bootstrap sample
nrows <- length(df$Safehaven)
start <- 1
finish <- 200
cluster <- parallel::makeCluster(cores, type = "PSOCK")
registerDoParallel(cl = cluster)
foreach(i = start:finish,
.packages = c("here", "tidyverse", "mice", "glmnet"))
%dopar% {
run_imputation <- function(data = "analysis_data_10_01_25.rds",
cores = 1,
output_suffix = "complete") {
## Read data
df <- read_rds(here("data", data))
## Single imputation for variables with rare (<10) missing values
df <- single_imputation(df)
## standardise before imputation
df <- standardise(df)
## impute for each bootstrap sample
nrows <- length(df$Safehaven)
start <- 1
finish <- 200
cluster <- parallel::makeCluster(cores, type = "PSOCK")
registerDoParallel(cl = cluster)
foreach(i = start:finish,
.packages = c("here", "tidyverse", "mice", "glmnet")) %dopar% {
source(here("imputation", "imputation_helpers.R"))
nrows <- length(df$Safehaven)
set.seed(i)
samples <- sample(1:nrows, nrows, replace = TRUE)
df_sample <- df[samples, ]
imputation(
df_sample,
imp_name = paste0("imp", i, ".rds"),
complete_name = paste0("complete", i, ".rds")
)
}
}
run_imputation <- function(data = "analysis_data_10_01_25.rds",
cores = 1,
output_suffix = "complete") {
## Read data
df <- read_rds(here("data", data))
## Single imputation for variables with rare (<10) missing values
df <- single_imputation(df)
## standardise before imputation
df <- standardise(df)
## impute for each bootstrap sample
nrows <- length(df$Safehaven)
start <- 1
finish <- 200
cluster <- parallel::makeCluster(cores, type = "PSOCK")
registerDoParallel(cl = cluster)
foreach(i = start:finish,
.packages = c("here", "tidyverse", "mice", "glmnet")) %dopar% {
source(here("imputation", "imputation_helpers.R"))
nrows <- length(df$Safehaven)
set.seed(i)
samples <- sample(1:nrows, nrows, replace = TRUE)
df_sample <- df[samples, ]
imputation(
df_sample,
imp_name = paste0("imp", i, ".rds"),
complete_name = paste0(output_suffix, i, ".rds")
)
}
}
run_imputation(output_suffix = "test")
source(here("imputation", "custom_mice_functions.R"))
source(here("imputation", "imputation_helpers.R"))
library(foreach)
library(doParallel)
library(tidyverse)
library(mice)
library(here)
library(glmnet)
source(here("R", "utils.R"))
source(here("imputation", "custom_mice_functions.R"))
source(here("imputation", "imputation_helpers.R"))
run_imputation <- function(data = "analysis_data_10_01_25.rds",
cores = 1,
mice_output_suffix = "imp",
complete_data_suffix = "complete") {
## Read data
df <- read_rds(here("data", data))
## Single imputation for variables with rare (<10) missing values
df <- single_imputation(df)
## standardise before imputation
df <- standardise(df)
## impute for each bootstrap sample
nrows <- length(df$Safehaven)
start <- 1
finish <- 200
cluster <- parallel::makeCluster(cores, type = "PSOCK")
registerDoParallel(cl = cluster)
foreach(i = start:finish,
.packages = c("here", "tidyverse", "mice", "glmnet")) %dopar% {
source(here("imputation", "imputation_helpers.R"))
nrows <- length(df$Safehaven)
set.seed(i)
samples <- sample(1:nrows, nrows, replace = TRUE)
df_sample <- df[samples, ]
imputation(
df_sample,
m = 2,
imp_name = paste0(mice_output_suffix, i, ".rds"),
complete_name = paste0(output_suffix, i, ".rds")
)
}
}
run_imputation(mice_output_suffix = "test", complete_data_suffix = "test")
